// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using T4.PR1.Data;

#nullable disable

namespace T4.PR1.Migrations
{
    [DbContext(typeof(EcoEnergyContext))]
    [Migration("20250326163055_AddDecimalPrecisionComplete")]
    partial class AddDecimalPrecisionComplete
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("T4.PR1.Model.EnergyIndicator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CCAC_AutoGasoline")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CCAC_DieselA")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CDEEBC_AuxiliaryConsumption")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CDEEBC_AvailableProduction")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CDEEBC_ElectricityDemand")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CDEEBC_GrossProduction")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CDEEBC_InterchangeBalance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CDEEBC_NetProduction")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CDEEBC_PumpConsumption")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CDEEBC_TotalLiberalizedMarket")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CDEEBC_TotalRegulatedMarket")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CDEEBC_TotalSalesCentralGrid")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DGGN_FrontierEnagas")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DGGN_GNLDistribution")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DGGN_NaturalGasConsumption")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FEEI_CementLimePlaster")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("FEEI_ChemicalPetrochemical")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("FEEI_FoodBeverageTobacco")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("FEEI_GlassIndustry")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("FEEI_Metallurgy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("FEEI_OtherConstructionMaterials")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("FEEI_OtherIndustries")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("FEEI_OtherMetalTransformation")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("FEEI_PaperPulpCardboard")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("FEEI_PublicWorksConsumption")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("FEEI_SteelFoundry")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("FEEI_TextileLeatherFootwear")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("FEEI_TransportConstruction")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("FEE_Domestic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("FEE_Energy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("FEE_Industry")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("FEE_Primary")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("FEE_Tertiary")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("PBEE_Coal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("PBEE_CombinedCycle")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("PBEE_FuelOil")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("PBEE_Hydroelectric")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("PBEE_NaturalGas")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("PBEE_Nuclear")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("EnergyIndicators");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CCAC_AutoGasoline = 10m,
                            CCAC_DieselA = 8m,
                            CDEEBC_AuxiliaryConsumption = 10m,
                            CDEEBC_AvailableProduction = 135m,
                            CDEEBC_ElectricityDemand = 130m,
                            CDEEBC_GrossProduction = 150m,
                            CDEEBC_InterchangeBalance = 5m,
                            CDEEBC_NetProduction = 140m,
                            CDEEBC_PumpConsumption = 5m,
                            CDEEBC_TotalLiberalizedMarket = 60m,
                            CDEEBC_TotalRegulatedMarket = 70m,
                            CDEEBC_TotalSalesCentralGrid = 120m,
                            DGGN_FrontierEnagas = 4m,
                            DGGN_GNLDistribution = 3m,
                            DGGN_NaturalGasConsumption = 2m,
                            Date = "01/2023",
                            FEEI_CementLimePlaster = 4m,
                            FEEI_ChemicalPetrochemical = 2m,
                            FEEI_FoodBeverageTobacco = 8m,
                            FEEI_GlassIndustry = 5m,
                            FEEI_Metallurgy = 6m,
                            FEEI_OtherConstructionMaterials = 3m,
                            FEEI_OtherIndustries = 5m,
                            FEEI_OtherMetalTransformation = 9m,
                            FEEI_PaperPulpCardboard = 6m,
                            FEEI_PublicWorksConsumption = 8m,
                            FEEI_SteelFoundry = 7m,
                            FEEI_TextileLeatherFootwear = 7m,
                            FEEI_TransportConstruction = 1m,
                            FEE_Domestic = 20m,
                            FEE_Energy = 5m,
                            FEE_Industry = 40m,
                            FEE_Primary = 10m,
                            FEE_Tertiary = 30m,
                            PBEE_Coal = 50m,
                            PBEE_CombinedCycle = 60m,
                            PBEE_FuelOil = 25m,
                            PBEE_Hydroelectric = 100m,
                            PBEE_NaturalGas = 75m,
                            PBEE_Nuclear = 80m
                        });
                });

            modelBuilder.Entity("T4.PR1.Model.EnergySimulation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CostPerKWh")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("EnergyGenerated")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InputValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("PricePerKWh")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Ratio")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("SimulationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SystemType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Simulations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CostPerKWh = 0.1m,
                            EnergyGenerated = 10m,
                            InputValue = 5m,
                            PricePerKWh = 0.2m,
                            Ratio = 2m,
                            SimulationDate = new DateTime(2025, 3, 26, 17, 30, 53, 833, DateTimeKind.Local).AddTicks(4647),
                            SystemType = "Solar"
                        });
                });

            modelBuilder.Entity("T4.PR1.Model.WaterConsumption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DomesticConsumptionPerCapita")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("EconomicActivities")
                        .HasColumnType("int");

                    b.Property<int>("HomeNetwork")
                        .HasColumnType("int");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.Property<int>("TotalWaterConsumption")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WaterConsumptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = 1,
                            County = "Barcelona",
                            DomesticConsumptionPerCapita = 10m,
                            EconomicActivities = 200,
                            HomeNetwork = 500,
                            Population = 1000,
                            TotalWaterConsumption = 10000,
                            Year = 2023
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
